<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAPsAAAA4CAYAAAA7Do68AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAS
        dAAAEnQB3mYfeAAABLJJREFUeF7t0/dbyAkAx/F7bj+3nrt7bjw3nhvPreeyxxlnnb01ESIiFSpKRRRF
        hKg0UFIIKauMSkp2RCJEpakhUsg+97nu60+4X98/vH9///J6raG6Wc8e/qOnD17q6f2XetL0tx43vtCj
        ey/U3PDc6OHdZ3pQ/1T3bz9RU91jo8baR7pX06yGW826U/XQqL7ygW5X3FddeZNqyxpVW9qompv3VF3S
        oFvFDaoququqG3dVef2OKgrrVX7ttsqu1qnsSp1KC2p183KNSi5Vqzi/pYvVKsq7pRsXqnT9fKUKcytU
        eK5C186W62pOma6cKVXB6VJdPlWqSydvKv9EiS4eL1besSLlZRfpwtEbOp91XbmZhTp35FVnM64pJ/2q
        zqRd0enUAqNThy7r5MFLOrE/X8dTLupYS9nJeTq674Ky9p5X5p5cZe7O1ZFd55SRdFaHE3OUvjNHaQk5
        St1xRoe2n9bBbad0IP6k0f6tJ5Sy+biS445pX2y20d5N2doTc1S7o7O0KyrTKGnDESWuz9DOyMNKiEg3
        2hGepu1hadoWmqr4kENGW4MPasuaA9octF9xq1KMYlcmKyYwWRuX71P0sr1GUQF7tGHpbq3336V1fklG
        kYsTFbEoUeG+OxXmk6CwhQlau2CHQr23K2T+NgXPi1ewV7zWeG7Vao8tCpq7RavcNxutdIvTitmxCnTd
        pOUuMUbLnDcqYFa0lsyIlr9TlJGf4wYtdlivRdPXydc+Ur7TIuUzNUIL7cK1YEq4vCeHyds2TPMnrdW8
        iaHysgmR54RgeY4Plse4NZprvVruY4PkNqal0UGaY7VKsy1XytVihVzMA+ViFihn0+WaNWqZZo4M0IwR
        AXIaHiDHYUvlMHSJpg/xl/1gP9kP8tO0gYs1dcAi2fX31ZR+r5rc10e2fRZqUu8FmtjL28im53xN6DFP
        47t7aVw3T1m3NLarh8Z0mavRf7jLqrObrDq5ybLjHFl0mC3z9q4ya+cq07auGtXGRSNbO2tEq1kabjLT
        aNjvMzT0NycN+dVRg39xMBr0s4MG/jRdA360V/8fphn1+36q+n5np7++naI+30w26v21rXp9ZaueX05S
        jy8mGv35uY26fzZB3T4dr66fjDPq8rG1On9krU4fjlXHD8YYdXh/tNq/Z6V271qq7TsWRm3eNlfrt8zV
        6k0zmbxhKpPXTTWy5fU/x2AHO9jBDnawgx3sYAc72MEOdrCDHexgBzvYwQ52sIMd7GAHO9jBDnawgx3s
        YAc72MEOdrCDHexgBzvYwQ52sIMd7GAHO9jBDnawgx3sYAc72MEOdrCDHexgBzvYwQ52sIMd7GAHO9jB
        Dnawgx3sYAc72MEOdrCDHexgBzvYwQ52sIMd7GAHO9jBDnawgx3sYAc72MEOdrCDHexgBzvYwQ52sIMd
        7GAHO9jBDnawgx3sYAc72MEOdrCDHexgBzvYwQ52sIMd7GAHO9jBDnawgx3sYAc72MEOdrCDHexgBzvY
        wQ52sIMd7GAHO9jBDnawgx3sYAc72MEOdrCDHexgBzvYwQ52sIMd7GAHO9jBDnawgx3sYAc72MEOdrCD
        HexgBzvYwQ52sP8v7M/1L5JPOZ1He0w0AAAAAElFTkSuQmCC
</value>
  </data>
</root>